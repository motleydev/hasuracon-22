import React from "react";
import type { NextPage } from "next";
import { pipe, subscribe } from "wonka";
import Head from "next/head";

import { client } from "../../../utils/client";
import { GetFruitSubscription, GetFruit } from "../../../generated/graphql";
import FormInput from "../../../components/FormInput";

const STATUS = {
  READY: "READY",
  NOT_READY: "NOT_READY",
};

const Create: NextPage = () => {
  const [status, setStatus] = React.useState(STATUS.NOT_READY);
  const [fruits, setFruits] = React.useState<any[]>([]);

  React.useEffect(() => {
    if (status === STATUS.NOT_READY) {
      setStatus(STATUS.READY);
    }
  }, [status, STATUS, setStatus]);

  React.useEffect(() => {
    if (status === STATUS.READY) {
      const { unsubscribe } = pipe(
        client.subscription<GetFruitSubscription>(
          GetFruit,
          {},
          {
            requestPolicy: "network-only",
          }
        ),
        subscribe((result) => {
          setFruits(() => result.data?.fruit || []);
        })
      );

      return () => unsubscribe();
    }
  }, [STATUS, status]);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="overflow-x-auto">
        <FormInput />
        <table className="table w-full">
          <thead>
            <tr>
              <th>Name</th>
              <th>Score</th>
              <th>User</th>
            </tr>
          </thead>
          <tbody>
            {fruits.map((fruit, index) => {
              return (
                <tr key={index}>
                  <td>{fruit.name}</td>
                  <td>{fruit.score}</td>
                  <td></td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </>
  );
};

export default Create;
